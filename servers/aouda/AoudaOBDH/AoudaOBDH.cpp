/*----- PROTECTED REGION ID(AoudaOBDH.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        AoudaOBDH.cpp
//
// description : C++ source for the AoudaOBDH and its commands.
//               The class is derived from Device. It represents the
//               CORBA servant object which will be accessed from the
//               network. All commands which can be executed on the
//               AoudaOBDH are implemented in this file.
//
// project :     ERAS_C3.
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source:  $
// $Log:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#include <AoudaOBDH.h>
#include <AoudaOBDHClass.h>

/*----- PROTECTED REGION END -----*/


/**
 *	AoudaOBDH class description:
 *	Aouda Telemetry Data acquisition
 *	
 */

//================================================================
//
//  The following table gives the correspondence
//  between command and method names.
//
//  Command name  |  Method name
//----------------------------------------------------------------
//  State         |  Inherited (no method)
//  Status        |  Inherited (no method)
//================================================================

namespace AoudaOBDH_ns
{
	/*----- PROTECTED REGION ID(AoudaOBDH::namespace_starting) ENABLED START -----*/

	//	static initializations

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::namespace_starting



//--------------------------------------------------------
/**
 *	Method      : AoudaOBDH::AoudaOBDH()
 *	Description : Constructors for a Tango device
 *	              implementing the class AoudaOBDH
 */
//--------------------------------------------------------
AoudaOBDH::AoudaOBDH(Tango::DeviceClass *cl, string &s)
 	: Tango::Device_4Impl(cl, s.c_str())
{
	/*----- PROTECTED REGION ID(AoudaOBDH::constructor_1) ENABLED START -----*/

	init_device();

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::constructor_1
}
//--------------------------------------------------------
AoudaOBDH::AoudaOBDH(Tango::DeviceClass *cl, const char *s)
 	: Tango::Device_4Impl(cl, s)
{
	/*----- PROTECTED REGION ID(AoudaOBDH::constructor_2) ENABLED START -----*/

	init_device();

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::constructor_2
}
//--------------------------------------------------------
AoudaOBDH::AoudaOBDH(Tango::DeviceClass *cl, const char *s, const char *d)
 	: Tango::Device_4Impl(cl, s, d)
{
	/*----- PROTECTED REGION ID(AoudaOBDH::constructor_3) ENABLED START -----*/

	init_device();

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::constructor_3
}


//--------------------------------------------------------
/**
 *	Method      : AoudaOBDH::delete_device()()
 *	Description : will be called at device destruction or at init command
 */
//--------------------------------------------------------
void AoudaOBDH::delete_device()
{
	/*----- PROTECTED REGION ID(AoudaOBDH::delete_device) ENABLED START -----*/

	//	Delete device allocated objects

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::delete_device
	delete[] attr_HelmetTemp_read;
	delete[] attr_HelmetHumidity_read;
	datafile.close();
	
}


//--------------------------------------------------------
/**
 *	Method      : AoudaOBDH::init_device()
 *	Description : //	will be called at device initialization.
 */
//--------------------------------------------------------
void AoudaOBDH::init_device()
{
	DEBUG_STREAM << "AoudaOBDH::init_device() create device " << device_name << endl;

	
	attr_HelmetTemp_read = new Tango::DevDouble[1];
	attr_HelmetHumidity_read = new Tango::DevDouble[1];
	datafile.open ("/home/parent/C3Project/AoudaOBDH/data.txt");
	
	/*----- PROTECTED REGION ID(AoudaOBDH::init_device) ENABLED START -----*/

	//	Initialize device

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::init_device
}



//--------------------------------------------------------
/**
 *	Method      : AoudaOBDH::always_executed_hook()
 *	Description : method always executed before any command is executed
 */
//--------------------------------------------------------
void AoudaOBDH::always_executed_hook()
{
	INFO_STREAM << "AoudaOBDH::always_executed_hook()  " << device_name << endl;
	/*----- PROTECTED REGION ID(AoudaOBDH::always_executed_hook) ENABLED START -----*/

	//	code always executed before all requests

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::always_executed_hook
}



//--------------------------------------------------------
/**
 *	Method      : AoudaOBDH::read_attr_hardware()
 *	Description : Hardware acquisition for attributes.
 */
//--------------------------------------------------------
void AoudaOBDH::read_attr_hardware(vector<long> &attr_list)
{
	DEBUG_STREAM << "AoudaOBDH::read_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(AoudaOBDH::read_attr_hardware) ENABLED START -----*/

	//	Add your own code

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::read_attr_hardware

}


//--------------------------------------------------------
/**
 *	Read HelmetTemp attribute
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar 
 */
//--------------------------------------------------------
void AoudaOBDH::read_HelmetTemp(Tango::Attribute &attr)
{
	DEBUG_STREAM << "AoudaOBDH::read_HelmetTemp() entering... " << endl;
	DEBUG_STREAM << "AoudaOBDH::read_HelmetTemp() twice... " << endl;
	/*----- PROTECTED REGION ID(AoudaOBDH::read_HelmetTemp) ENABLED START -----*/

	//	Set the attribute value
	if (datafile.is_open())
  	{
	long end;
	string line;
	//datafile.seekg (2, ios::end);
	//getline (datafile,line);
	cin >> line;
	DEBUG_STREAM << "AoudaOBDH::read_HelmetTemp() line is:" << line << endl;
	stringstream str(line);
	str >> *attr_HelmetTemp_read;
	attr.set_value(attr_HelmetTemp_read);
	} else {
		DEBUG_STREAM << "AoudaOBDH::read_HelmetTemp() datafile not open" << endl;
	}

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::read_HelmetTemp
}
//--------------------------------------------------------
/**
 *	Read HelmetHumidity attribute
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar 
 */
//--------------------------------------------------------
void AoudaOBDH::read_HelmetHumidity(Tango::Attribute &attr)
{
	DEBUG_STREAM << "AoudaOBDH::read_HelmetHumidity(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(AoudaOBDH::read_HelmetHumidity) ENABLED START -----*/

	//	Set the attribute value
	*attr_HelmetHumidity_read=45;
	attr.set_value(attr_HelmetHumidity_read);

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::read_HelmetHumidity
}

//--------------------------------------------------------
/**
 *	Method      : AoudaOBDH::AoudaOBDHClass::add_dynamic_attributes()
 *	Description : Create the dynamic attributes if any
 *	              for specified device.
 */
//--------------------------------------------------------
void AoudaOBDH::add_dynamic_attributes()
{
	/*----- PROTECTED REGION ID(AoudaOBDH::Class::add_dynamic_attributes) ENABLED START -----*/

	//	Add your own code to create and add dynamic attributes if any

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::Class::add_dynamic_attributes

}



//========================================================
//	Command execution methods
//========================================================


	/*----- PROTECTED REGION ID(AoudaOBDH::namespace_ending) ENABLED START -----*/

	//	Additional Methods

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::namespace_ending
} //	namespace
