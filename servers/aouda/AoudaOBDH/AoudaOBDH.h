/*----- PROTECTED REGION ID(AoudaOBDH.h) ENABLED START -----*/
//=============================================================================
//
// file :        AoudaOBDH.h
//
// description : Include for the AoudaOBDH class.
//
// project :     ERAS_C3.
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source:  $
// $Log:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef AOUDAOBDH_H
#define AOUDAOBDH_H


#include <tango.h>
#include <iostream>
#include <fstream>
#include <string>
#include <sstream>




/*----- PROTECTED REGION END -----*/


/**
 *	AoudaOBDH class Description:
 *	Aouda Telemetry Data acquisition
 *	
 */

namespace AoudaOBDH_ns
{
	/*----- PROTECTED REGION ID(AoudaOBDH::Additional Class Declarations) ENABLED START -----*/

		//		Additional Class Declarations

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::Additional Class Declarations


class AoudaOBDH : public Tango::Device_4Impl
{


	/*----- PROTECTED REGION ID(AoudaOBDH::Data Members) ENABLED START -----*/

	//		Add your own data members
	ifstream datafile;

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::Data Members


//	Device property data members
public:	

//	Attribute data members
public:
	Tango::DevDouble	*attr_HelmetTemp_read;
	Tango::DevDouble	*attr_HelmetHumidity_read;



//	Constructors and destructors
public:
	/**
	 * Constructs a newly allocated Command object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	AoudaOBDH(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly allocated Command object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	AoudaOBDH(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly allocated Command object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	AoudaOBDH(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The object destructor.
	 */	
	~AoudaOBDH() {delete_device();};



//	Miscellaneous methods
public:
	/**
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/**
	 *	Initialize the device
	 */
	virtual void init_device();
	/**
	 *	Read the device properties from database
	 */
	 void get_device_property();
	/**
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	/**
	 *	Method      : AoudaOBDH::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	virtual void read_attr_hardware(vector<long> &attr_list);


	/**
	 *	HelmetTemp attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_HelmetTemp(Tango::Attribute &attr);
	virtual bool is_HelmetTemp_allowed(Tango::AttReqType type);



	/**
	 *	HelmetHumidity attribute related methods.
	 *	Description: 
	 *
	 *	Data type:	Tango::DevDouble
	 *	Attr type:	Scalar 
	 */
	virtual void read_HelmetHumidity(Tango::Attribute &attr);
	virtual bool is_HelmetHumidity_allowed(Tango::AttReqType type);



	/**
	 *	Method      : AoudaOBDH::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
		void add_dynamic_attributes();

//	Command related methods
public: 




	/*----- PROTECTED REGION ID(AoudaOBDH::Additional Method prototypes) ENABLED START -----*/

	//	Additional Method prototypes

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::Additional Method prototypes

};

	/*----- PROTECTED REGION ID(AoudaOBDH::Additional Classes Definitions) ENABLED START -----*/

	//	Additional Classes definitions

	/*----- PROTECTED REGION END -----*/	//	AoudaOBDH::Additional Classes Definitions

} //	namespace

#endif	//	AOUDAOBDH_H
