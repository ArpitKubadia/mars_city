#!/usr/bin/python

from __future__ import division

import sys
import PyTango

import legorcx

class PyDevice(PyTango.DeviceClass):
    cmd_list = {'start': [[PyTango.ArgType.DevVoid],
                          [PyTango.ArgType.DevVoid]],
                'stop': [[PyTango.ArgType.DevVoid],
                         [PyTango.ArgType.DevVoid]],
                'set_speed': [[PyTango.ArgType.DevFloat],
                         [PyTango.ArgType.DevVoid]],
                'set_steering': [[PyTango.ArgType.DevFloat],
                         [PyTango.ArgType.DevVoid]],
                'drive': [[PyTango.ArgType.DevVoid],
                          [PyTango.ArgType.DevVoid],
                          {'polling period': 400}],}
    attr_type = [
        [PyTango.ArgType.DevFloat,
         PyTango.AttrDataFormat.SCALAR,
         PyTango.AttrWriteType.READ],
        {'polling period': 400}
    ]
    attr_list = {
        'speed': attr_type,
        'steering': attr_type,
    }

    def __init__(self, name):
        PyTango.DeviceClass.__init__(self, name)
        self.set_type("TestDevice")


class PyLegoRCX(PyTango.Device_4Impl):
    def __init__(self, cl, name):
        self.neurohs = PyTango.DeviceProxy('c3/neurohs/epoc')
        self.devices = {}
        PyTango.Device_4Impl.__init__(self, cl, name)
        self.info_stream('In PyLegoRCX.__init__')
        PyLegoRCX.init_device(self)

    def read_speed(self, the_att):
        #self.speed = self.neurohs['speed'].value
        #self.speed = self.neurohs['y'].value
        the_att.set_value(self.speed)
        #print 'speed', self.speed

    def read_steering(self, the_att):
        #self.steering = self.neurohs['steering'].value
        #self.steering = self.neurohs['x'].value
        the_att.set_value(self.steering)
        #print 'steering', self.steering

    def start(self):
        self.drivercx.start()
        print 'start'

    def stop(self):
        self.drivercx.stop()
        print 'stop'

    def set_speed(self, speed_value):
        self.speed = speed_value
        print 'set_speed'

    def set_steering(self, steering_value):
        self.steering =  steering_value
        print 'set_steering'

    def drive(self):
        self.drivercx.drive(self.speed, self.steering)
        print 'drive speed and steering with values:', self.speed, self.steering

    def init_device(self):
        self.info_stream('In Python init_device method')
        self.speed = 0
        self.steering = 0
        self.set_state(PyTango.DevState.ON)
        self.drivercx = legorcx.DriveRCX()


if __name__ == '__main__':
    util = PyTango.Util(sys.argv)
    util.add_class(PyDevice, PyLegoRCX)

    U = PyTango.Util.instance()
    U.server_init()
    U.server_run()
